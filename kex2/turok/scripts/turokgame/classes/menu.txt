////////////////////////////////////////////////////
//
// MenuFillBox
//
////////////////////////////////////////////////////

final class MenuFillBox {
    kCanvasImage @tile1;
    kCanvasImage @tile2;
    kCanvasImage @tile3;
    kCanvasImage @tile4;
    kCanvasImage @tile5;
    kCanvasContainer @container;
    
    MenuFillBox(void) {
    }
    
    void SetStyle(const float width, const float height,
              const float borderSize, bool bTintSide,
              const uint8 r, const uint8 g, const uint8 b) {
        uint8 r1, r2, g1, g2, b1, b2;
        if(bTintSide) {
            r1 = r >> 1;
            g1 = g >> 1;
            b1 = b >> 1;
            r2 = r << 1;
            g2 = g << 1;
            b2 = b << 1;
        }
        else {
            r1 = r << 1;
            g1 = g << 1;
            b1 = b << 1;
            r2 = r >> 1;
            g2 = g >> 1;
            b2 = b >> 1;
        }
        
        tile1.SetRGB(0, r, g, b);
        tile1.SetRGB(1, r, g, b);
        tile1.SetRGB(2, r, g, b);
        tile1.SetRGB(3, r, g, b);
        tile1.width = width;
        tile1.height = height;
        
        tile2.SetRGB(0, r2, g2, b2);
        tile2.SetRGB(1, r2, g2, b2);
        tile2.SetRGB(2, r2, g2, b2);
        tile2.SetRGB(3, r2, g2, b2);
        tile2.width = width;
        tile2.height = borderSize;
        
        tile3.SetRGB(0, r1, g1, b1);
        tile3.SetRGB(1, r1, g1, b1);
        tile3.SetRGB(2, r1, g1, b1);
        tile3.SetRGB(3, r1, g1, b1);
        tile3.x = width - borderSize;
        tile3.width = borderSize;
        tile3.height = height;
        
        tile4.SetRGB(0, r1, g1, b1);
        tile4.SetRGB(1, r1, g1, b1);
        tile4.SetRGB(2, r1, g1, b1);
        tile4.SetRGB(3, r1, g1, b1);
        tile4.y = height - borderSize;
        tile4.width = width;
        tile4.height = borderSize;
        
        tile5.SetRGB(0, r2, g2, b2);
        tile5.SetRGB(1, r2, g2, b2);
        tile5.SetRGB(2, r2, g2, b2);
        tile5.SetRGB(3, r2, g2, b2);
        tile5.width = borderSize;
        tile5.height = height;
    }
    
    void Init(const float width, const float height,
              const float borderSize, bool bTintSide,
              const uint8 r, const uint8 g, const uint8 b) {
        @container = Canvas.CreateContainer();
        @tile1 = Canvas.CreateImage("textures/white.tga");
        @tile2 = Canvas.CreateImage("textures/white.tga");
        @tile3 = Canvas.CreateImage("textures/white.tga");
        @tile4 = Canvas.CreateImage("textures/white.tga");
        @tile5 = Canvas.CreateImage("textures/white.tga");
        
        container.AddChild(tile5);
        container.AddChild(tile4);
        container.AddChild(tile3);
        container.AddChild(tile2);
        container.AddChild(tile1);
        
        SetStyle(width, height, borderSize, bTintSide, r, g, b);
    }
};
