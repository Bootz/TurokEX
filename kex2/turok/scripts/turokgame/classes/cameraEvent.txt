////////////////////////////////////////////////////
//
// CameraEvent
//
////////////////////////////////////////////////////

class CameraEvent {
    float   fade;
    bool    bFading;
    bool    bFadeOut;
    int     stage;
    float   time;
    float   fadeSpeed;
    
    CameraEvent(void) {
        fade = 0;
        bFading = false;
        bFadeOut = false;
        stage = 0;
        time = 0;
        fadeSpeed = 350;
    }
    
    ~CameraEvent(void) {
    }
    
    void StartEvent(void) {
        FadeOut();
        stage = 0;
    }
    
    void FadeIn(void) {
        bFading = true;
        bFadeOut = false;
        fade = 255;
    }
    
    void FadeOut(void) {
        bFading = true;
        bFadeOut = true;
        fade = 0;
    }
    
    bool Update(bool bCancel) {
        if(LocalWorld.GetTicks() <= 1) {
            return true;
        }
        
        if(bCancel) {
            OnCancel();
        }
        
        if(bFading == false) {
            return false;
        }
        
        if(bFadeOut) {
            fade += (fadeSpeed * Client.GetRunTime());
        }
        else {
            fade -= (fadeSpeed * Client.GetRunTime());
        }
        
        if(fade > 255) {
            fade = 255;
            bFading = false;
            stage++;
        }
        
        if(fade < 0) {
            fade = 0;
            bFading = false;
            stage++;
        }
        
        turokGame.SetOverlayAlpha(fade);
        return true;
    }
    
    void OnCancel(void) {
    }
    
    void RunEvent(void) {
    }
};

////////////////////////////////////////////////////
//
// CameraEventTeleport
//
////////////////////////////////////////////////////

class CameraEventTeleport : CameraEvent {
    TurokAreaTeleport @teleport;
    
    CameraEventTeleport(void) {
        super();
        @teleport = null;
    }
    
    ~CameraEventTeleport(void) {
        @teleport = null;
    }
    
    void RunEvent(void) {
        if(teleport is null) {
            return;
        }
        
        switch(stage) {
            case 0:
                localClient.Lock();
                stage++;
                break;
            case 1:
                break;
            case 2:
                localPlayer.Teleport(teleport);
                FadeIn();
                stage++;
                break;
            case 3:
                localClient.Unlock();
                break;
            case 4:
                @teleport = null;
                break;
        }
    }
};
